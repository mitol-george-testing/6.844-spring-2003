{
  "level": "Graduate",
  "topics": [
    [
      "Engineering",
      "Computer Science",
      "Programming Languages"
    ],
    [
      "Mathematics",
      "Computation"
    ],
    [
      "Engineering",
      "Computer Science",
      "Theory of Computation"
    ]
  ],
  "instructors": {
    "content": [
      "98ac3637-077b-4114-a6e7-bc8eb998e2e3"
    ],
    "website": "ocw-www"
  },
  "course_title": "Computability Theory of and with Scheme",
  "course_description": "6.844 is a graduate introduction to programming theory, logic of programming, and computability, with the programming language Scheme used to crystallize computability constructions and as an object of study itself. Topics covered include: programming and computability theory based on a term-rewriting, \"substitution\" model of computation by Scheme programs with side-effects; computation as algebraic manipulation: Scheme evaluation as algebraic manipulation and term rewriting theory; paradoxes from self-application and introduction to formal programming semantics; undecidability of the Halting Problem for Scheme; properties of recursively enumerable sets, leading to Incompleteness Theorems for Scheme equivalences; logic for program specification and verification; and Hilbert's Tenth Problem.\n",
  "department_numbers": [
    "6"
  ],
  "extra_course_numbers": "",
  "primary_course_number": "6.844",
  "learning_resource_types": [
    "Problem Sets"
  ],
  "title": "Course Metadata"
}